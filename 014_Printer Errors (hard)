/*Challenge link: https://www.codewars.com/kata/56541980fa08ab47a0000040/train/csharp
Question:

In a factory a printer prints labels for boxes. For one kind of boxes the printer has to use colors which, for the sake of simplicity, are named with letters from a to m.

The colors used by the printer are recorded in a control string. For example a "good" control string would be aaabbbbhaijjjm meaning that the printer used three times color a, four times color b, one time color h then one time color a...

Sometimes there are problems: lack of colors, technical malfunction and a "bad" control string is produced e.g. aaaxbbbbyyhwawiwjjjwwm with letters not from a to m.

You have to write a function printer_error which given a string will return the error rate of the printer as a string representing a rational whose numerator is the number of errors and the denominator the length of the control string. Don't reduce this fraction to a simpler expression.

The string has a length greater or equal to one and contains only letters from ato z.

Examples:
s="aaabbbbhaijjjm"
printer_error(s) => "0/14"

s="aaaxbbbbyyhwawiwjjjwwm"
printer_error(s) => "8/22"


/*





//***************Solution********************

Solution 1:
//For Regex.Replace
using System.Text.RegularExpressions; 
using System;

public class Printer 
{
    public static string PrinterError(String s) 
    {
      string totalLength = s.Length.ToString();
      //dicard everything but n to z, then count it.
      string errorLength = Regex.Replace(s, "[^n-z]", "").Length.ToString();
      
      return errorLength + "/" + totalLength;
    }
}

Solution 2:

using System.Linq;
using System;


//Count everything after the letter 'm'
//Concatenate with the total length
//Then simiplfied into one line by using an Enumerable methods.
public class Printer 
{
    public static string PrinterError(String s) => s.Where(c => c > 'm').Count() + "/" + s.Length;
}




//****************Sample Test*****************


using System;
using NUnit.Framework;

[TestFixture]
public static class PrinterTests 
{

[Test]
    public static void test1() 
    {
        Console.WriteLine("Testing PrinterError");
        string s="aaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbmmmmmmmmmmmmmmmmmmmxyz";
        Assert.AreEqual("3/56", Printer.PrinterError(s));
    }
}  
