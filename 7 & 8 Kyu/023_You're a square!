/*Challenge link:https://www.codewars.com/kata/54c27a33fb7da0db0100040e/train/csharp
Question:
A square of squares
You like building blocks. You especially like building blocks that are squares. And what you even like more, is to arrange them into a square of square building blocks!

However, sometimes, you can't arrange them into a square. Instead, you end up with an ordinary rectangle! Those blasted things! If you just had a way to know, whether you're currently working in vainâ€¦ Wait! That's it! You just have to check if your number of building blocks is a perfect square.

Task
Given an integral number, determine if it's a square number:

In mathematics, a square number or perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself.

The tests will always use some integral number, so don't worry about that in dynamic typed languages.

Examples
-1  =>  false
 0  =>  true
 3  =>  false
 4  =>  true
25  =>  true
26  =>  false

/*

//***************Solution********************
using System;

//if remainder is zero then return true.
public class Kata
{
  public static bool IsSquare(int n)
  {
    double result = Math.Sqrt(n);
    bool checkSquare = result%1 == 0;
    return checkSquare;
  }
}


//****************Sample Test*****************

using System;
using NUnit.Framework;

[TestFixture]
public class Tests
{
  [Test]
  public static void ShouldWorkForSomeExamples()
  {
    Assert.AreEqual(false, Kata.IsSquare(-1),"negative numbers aren't square numbers");
    Assert.AreEqual(false, Kata.IsSquare(3),"3 isn't a square number");
    Assert.AreEqual(true, Kata.IsSquare(4),"4 is a square number");
    Assert.AreEqual(true, Kata.IsSquare(25),"25 is a square number");
    Assert.AreEqual(false, Kata.IsSquare(26),"26 isn't a square number");
  }
}
