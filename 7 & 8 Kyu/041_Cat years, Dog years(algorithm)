/*Challenge link:https://www.codewars.com/kata/5a6663e9fd56cb5ab800008b/train/csharp
Question:
Kata Task
I have a cat and a dog.

I got them at the same time as kitten/puppy. That was humanYears years ago.

Return their respective ages now as [humanYears,catYears,dogYears]

NOTES:

humanYears >= 1
humanYears are whole numbers only
Cat Years
15 cat years for first year
+9 cat years for second year
+4 cat years for each year after that
Dog Years
15 dog years for first year
+9 dog years for second year
+5 dog years for each year after that


/*

//***************Solution********************
//add 15 to first year
//add 9 to second year
//after the third year, multiple by the number of extra
//year(exclude the first 2 years) left by human year 
//return the result in int array.

public class Dinglemouse {

  public static int[] humanYearsCatYearsDogYears(int humanYears) {
    int[] result = new int[] { 0,0,0 };
    int cat = 0;
    int dog = 0;
    
    if (humanYears > 0){
      cat += 15;
      dog += 15;
        if (humanYears > 1){
        cat += 9;
        dog += 9;
          if (humanYears > 2){
            cat += 4* (humanYears-2);
            dog += 5* (humanYears-2);
        }
    }
}
result[0] = humanYears;
result[1] = cat;
result[2] = dog;
    return result;
  }

}

//****************Sample Test*****************
namespace Solution {
  using NUnit.Framework;
  using System;

  [TestFixture]
  public class SolutionTest
  {
    [Test]
    public void One()
    {
      Assert.AreEqual(new int[]{1,15,15}, Dinglemouse.humanYearsCatYearsDogYears(1));
    }
    
    [Test]
    public void Two()
    {
      Assert.AreEqual(new int[]{2,24,24}, Dinglemouse.humanYearsCatYearsDogYears(2));
    }
    
    [Test]
    public void Ten()
    {
      Assert.AreEqual(new int[]{10,56,64}, Dinglemouse.humanYearsCatYearsDogYears(10));
    }
  }    
   
  [TestFixture]
  public class RandomTest
  {  
    private static int[] humanYearsCatYearsDogYears20180123(int h) {
      return new int[]{h, h==1 ? 15 : h==2 ? 24 : 24+4*(h-2), h==1 ? 15 : h==2 ? 24 : 24+5*(h-2)};
    } 
  
    [Test]    
    public void random() {
      Random ran = new Random();
      for (int r = 0; r < 100; r++) {
        int humanYears = ran.Next(25) + 1;
        int[] expected = humanYearsCatYearsDogYears20180123(humanYears);
        int[] actual = Dinglemouse.humanYearsCatYearsDogYears(humanYears);
        Console.WriteLine(string.Format("Random test {0}: human years {1} => {2}", r+1, humanYears, string.Join(",",expected)));
        Assert.AreEqual(expected, actual);
      }
    }      
  }
}
